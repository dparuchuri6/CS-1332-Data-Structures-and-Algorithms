import org.junit.Before;
import org.junit.Test;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

import static org.junit.Assert.*;

/**
 * AVL tests.
 * @author Timothy Gregg
 * @version 1.0
 */
public class TGreggStressTestRound2 {

    private AVLInterface<Integer> avlTree;

    @Before
    public void setup() {
        avlTree = new AVL<>();
    }

    @Test
    public void StressTestIsBestTest() {
        List<Integer> comparisonList;
        assertEquals(0, avlTree.size());
        avlTree.add(1618957043);
        Integer[] comparisonArr0 = {1618957043};
        assertEquals(1, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr0));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(982750179);
        Integer[] comparisonArr1 = {1618957043, 982750179};
        assertEquals(2, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr1));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1512159961);
        Integer[] comparisonArr2 = {1512159961, 982750179, 1618957043};
        assertEquals(3, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr2));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1995884379);
        Integer[] comparisonArr3 = {1512159961, 982750179, 1618957043, 1995884379};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr3));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1618957043, avlTree.remove(1618957043));
        Integer[] comparisonArr4 = {1512159961, 982750179, 1995884379};
        assertEquals(3, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr4));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(144949942);
        Integer[] comparisonArr5 = {1512159961, 982750179, 1995884379, 144949942};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr5));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1643542694);
        Integer[] comparisonArr6 = {1512159961, 982750179, 1995884379, 144949942, 1643542694};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr6));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1995884379, avlTree.remove(1995884379));
        Integer[] comparisonArr7 = {1512159961, 982750179, 1643542694, 144949942};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr7));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2011343096);
        Integer[] comparisonArr8 = {1512159961, 982750179, 1643542694, 144949942, 2011343096};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr8));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1143701867);
        Integer[] comparisonArr9 = {1512159961, 982750179, 1643542694, 144949942, 1143701867, 2011343096};
        assertEquals(6, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr9));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(42073079);
        Integer[] comparisonArr10 = {1512159961, 982750179, 1643542694, 144949942, 1143701867, 2011343096, 42073079};
        assertEquals(7, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr10));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1512159961, avlTree.remove(1512159961));
        Integer[] comparisonArr11 = {1143701867, 144949942, 1643542694, 42073079, 982750179, 2011343096};
        assertEquals(6, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr11));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2011343096, avlTree.remove(2011343096));
        Integer[] comparisonArr12 = {1143701867, 144949942, 1643542694, 42073079, 982750179};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr12));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1143701867, avlTree.remove(1143701867));
        Integer[] comparisonArr13 = {982750179, 144949942, 1643542694, 42073079};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr13));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 982750179, avlTree.remove(982750179));
        Integer[] comparisonArr14 = {144949942, 42073079, 1643542694};
        assertEquals(3, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr14));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2124724351);
        Integer[] comparisonArr15 = {144949942, 42073079, 1643542694, 2124724351};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr15));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1643542694, avlTree.remove(1643542694));
        Integer[] comparisonArr16 = {144949942, 42073079, 2124724351};
        assertEquals(3, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr16));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2136156031);
        Integer[] comparisonArr17 = {144949942, 42073079, 2124724351, 2136156031};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr17));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1262103247);
        Integer[] comparisonArr18 = {144949942, 42073079, 2124724351, 1262103247, 2136156031};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr18));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1262103247, avlTree.remove(1262103247));
        Integer[] comparisonArr19 = {144949942, 42073079, 2124724351, 2136156031};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr19));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2136156031, avlTree.remove(2136156031));
        Integer[] comparisonArr20 = {144949942, 42073079, 2124724351};
        assertEquals(3, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr20));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(107424314);
        Integer[] comparisonArr21 = {144949942, 42073079, 2124724351, 107424314};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr21));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(972268331);
        Integer[] comparisonArr22 = {144949942, 42073079, 2124724351, 107424314, 972268331};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr22));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(214661615);
        Integer[] comparisonArr23 = {144949942, 42073079, 972268331, 107424314, 214661615, 2124724351};
        assertEquals(6, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr23));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1871037877);
        Integer[] comparisonArr24 = {144949942, 42073079, 972268331, 107424314, 214661615, 2124724351, 1871037877};
        assertEquals(7, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr24));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(180996622);
        Integer[] comparisonArr25 = {144949942, 42073079, 972268331, 107424314, 214661615, 2124724351, 180996622, 1871037877};
        assertEquals(8, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr25));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 180996622, avlTree.remove(180996622));
        Integer[] comparisonArr26 = {144949942, 42073079, 972268331, 107424314, 214661615, 2124724351, 1871037877};
        assertEquals(7, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr26));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1749954641);
        Integer[] comparisonArr27 = {144949942, 42073079, 972268331, 107424314, 214661615, 1871037877, 1749954641, 2124724351};
        assertEquals(8, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr27));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(330668921);
        Integer[] comparisonArr28 = {144949942, 42073079, 972268331, 107424314, 214661615, 1871037877, 330668921, 1749954641, 2124724351};
        assertEquals(9, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr28));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1074084898);
        Integer[] comparisonArr29 = {972268331, 144949942, 1871037877, 42073079, 214661615, 1749954641, 2124724351, 107424314, 330668921, 1074084898};
        assertEquals(10, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr29));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1047392762);
        Integer[] comparisonArr30 = {972268331, 144949942, 1871037877, 42073079, 214661615, 1074084898, 2124724351, 107424314, 330668921, 1047392762, 1749954641};
        assertEquals(11, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr30));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1564974342);
        Integer[] comparisonArr31 = {972268331, 144949942, 1749954641, 42073079, 214661615, 1074084898, 1871037877, 107424314, 330668921, 1047392762, 1564974342, 2124724351};
        assertEquals(12, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr31));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1503160161);
        Integer[] comparisonArr32 = {972268331, 144949942, 1749954641, 42073079, 214661615, 1074084898, 1871037877, 107424314, 330668921, 1047392762, 1564974342, 2124724351, 1503160161};
        assertEquals(13, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr32));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1047392762, avlTree.remove(1047392762));
        Integer[] comparisonArr33 = {972268331, 144949942, 1749954641, 42073079, 214661615, 1503160161, 1871037877, 107424314, 330668921, 1074084898, 1564974342, 2124724351};
        assertEquals(12, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr33));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(707011229);
        Integer[] comparisonArr34 = {972268331, 144949942, 1749954641, 42073079, 330668921, 1503160161, 1871037877, 107424314, 214661615, 707011229, 1074084898, 1564974342, 2124724351};
        assertEquals(13, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr34));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1918432636);
        Integer[] comparisonArr35 = {972268331, 144949942, 1749954641, 42073079, 330668921, 1503160161, 1918432636, 107424314, 214661615, 707011229, 1074084898, 1564974342, 1871037877, 2124724351};
        assertEquals(14, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr35));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(80829850);
        Integer[] comparisonArr36 = {972268331, 144949942, 1749954641, 80829850, 330668921, 1503160161, 1918432636, 42073079, 107424314, 214661615, 707011229, 1074084898, 1564974342, 1871037877, 2124724351};
        assertEquals(15, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr36));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 330668921, avlTree.remove(330668921));
        Integer[] comparisonArr37 = {972268331, 144949942, 1749954641, 80829850, 214661615, 1503160161, 1918432636, 42073079, 107424314, 707011229, 1074084898, 1564974342, 1871037877, 2124724351};
        assertEquals(14, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr37));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1486811550);
        Integer[] comparisonArr38 = {972268331, 144949942, 1749954641, 80829850, 214661615, 1503160161, 1918432636, 42073079, 107424314, 707011229, 1074084898, 1564974342, 1871037877, 2124724351, 1486811550};
        assertEquals(15, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr38));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(260595978);
        Integer[] comparisonArr39 = {972268331, 144949942, 1749954641, 80829850, 260595978, 1503160161, 1918432636, 42073079, 107424314, 214661615, 707011229, 1074084898, 1564974342, 1871037877, 2124724351, 1486811550};
        assertEquals(16, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr39));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2090733381);
        Integer[] comparisonArr40 = {972268331, 144949942, 1749954641, 80829850, 260595978, 1503160161, 1918432636, 42073079, 107424314, 214661615, 707011229, 1074084898, 1564974342, 1871037877, 2124724351, 1486811550, 2090733381};
        assertEquals(17, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr40));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(647935863);
        Integer[] comparisonArr41 = {972268331, 144949942, 1749954641, 80829850, 260595978, 1503160161, 1918432636, 42073079, 107424314, 214661615, 707011229, 1074084898, 1564974342, 1871037877, 2124724351, 647935863, 1486811550, 2090733381};
        assertEquals(18, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr41));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1094663191);
        Integer[] comparisonArr42 = {972268331, 144949942, 1749954641, 80829850, 260595978, 1503160161, 1918432636, 42073079, 107424314, 214661615, 707011229, 1094663191, 1564974342, 1871037877, 2124724351, 647935863, 1074084898, 1486811550, 2090733381};
        assertEquals(19, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr42));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(703695923);
        Integer[] comparisonArr43 = {972268331, 144949942, 1749954641, 80829850, 260595978, 1503160161, 1918432636, 42073079, 107424314, 214661615, 703695923, 1094663191, 1564974342, 1871037877, 2124724351, 647935863, 707011229, 1074084898, 1486811550, 2090733381};
        assertEquals(20, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr43));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1426280387);
        Integer[] comparisonArr44 = {972268331, 144949942, 1749954641, 80829850, 260595978, 1486811550, 1918432636, 42073079, 107424314, 214661615, 703695923, 1094663191, 1503160161, 1871037877, 2124724351, 647935863, 707011229, 1074084898, 1426280387, 1564974342, 2090733381};
        assertEquals(21, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr44));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1094663191, avlTree.remove(1094663191));
        Integer[] comparisonArr45 = {972268331, 144949942, 1749954641, 80829850, 260595978, 1486811550, 1918432636, 42073079, 107424314, 214661615, 703695923, 1074084898, 1503160161, 1871037877, 2124724351, 647935863, 707011229, 1426280387, 1564974342, 2090733381};
        assertEquals(20, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr45));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1749954641, avlTree.remove(1749954641));
        Integer[] comparisonArr46 = {972268331, 144949942, 1564974342, 80829850, 260595978, 1486811550, 1918432636, 42073079, 107424314, 214661615, 703695923, 1074084898, 1503160161, 1871037877, 2124724351, 647935863, 707011229, 1426280387, 2090733381};
        assertEquals(19, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr46));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(423453666);
        Integer[] comparisonArr47 = {972268331, 144949942, 1564974342, 80829850, 647935863, 1486811550, 1918432636, 42073079, 107424314, 260595978, 703695923, 1074084898, 1503160161, 1871037877, 2124724351, 214661615, 423453666, 707011229, 1426280387, 2090733381};
        assertEquals(20, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr47));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1111065067);
        Integer[] comparisonArr48 = {972268331, 144949942, 1564974342, 80829850, 647935863, 1486811550, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1503160161, 1871037877, 2124724351, 214661615, 423453666, 707011229, 1074084898, 1426280387, 2090733381};
        assertEquals(21, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr48));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(14247246);
        Integer[] comparisonArr49 = {972268331, 144949942, 1564974342, 80829850, 647935863, 1486811550, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1503160161, 1871037877, 2124724351, 14247246, 214661615, 423453666, 707011229, 1074084898, 1426280387, 2090733381};
        assertEquals(22, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr49));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1311913047);
        Integer[] comparisonArr50 = {972268331, 144949942, 1564974342, 80829850, 647935863, 1426280387, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1486811550, 1871037877, 2124724351, 14247246, 214661615, 423453666, 707011229, 1074084898, 1311913047, 1503160161, 2090733381};
        assertEquals(23, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr50));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1235089582);
        Integer[] comparisonArr51 = {972268331, 144949942, 1564974342, 80829850, 647935863, 1426280387, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1486811550, 1871037877, 2124724351, 14247246, 214661615, 423453666, 707011229, 1074084898, 1311913047, 1503160161, 2090733381, 1235089582};
        assertEquals(24, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr51));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(668814672);
        Integer[] comparisonArr52 = {972268331, 144949942, 1564974342, 80829850, 647935863, 1426280387, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1486811550, 1871037877, 2124724351, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1311913047, 1503160161, 2090733381, 1235089582};
        assertEquals(25, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr52));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(700022464);
        Integer[] comparisonArr53 = {972268331, 144949942, 1564974342, 80829850, 647935863, 1426280387, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1486811550, 1871037877, 2124724351, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1311913047, 1503160161, 2090733381, 700022464, 1235089582};
        assertEquals(26, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr53));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1564974342, avlTree.remove(1564974342));
        Integer[] comparisonArr54 = {972268331, 144949942, 1503160161, 80829850, 647935863, 1311913047, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1426280387, 1871037877, 2124724351, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1235089582, 1486811550, 2090733381, 700022464};
        assertEquals(25, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr54));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(933988885);
        Integer[] comparisonArr55 = {972268331, 144949942, 1503160161, 80829850, 647935863, 1311913047, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1426280387, 1871037877, 2124724351, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1235089582, 1486811550, 2090733381, 700022464, 933988885};
        assertEquals(26, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr55));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1091156861);
        Integer[] comparisonArr56 = {972268331, 144949942, 1503160161, 80829850, 647935863, 1311913047, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1426280387, 1871037877, 2124724351, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1235089582, 1486811550, 2090733381, 700022464, 933988885, 1091156861};
        assertEquals(27, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr56));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1768465817);
        Integer[] comparisonArr57 = {972268331, 144949942, 1503160161, 80829850, 647935863, 1311913047, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1426280387, 1871037877, 2124724351, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1235089582, 1486811550, 1768465817, 2090733381, 700022464, 933988885, 1091156861};
        assertEquals(28, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr57));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1777176494);
        Integer[] comparisonArr58 = {972268331, 144949942, 1503160161, 80829850, 647935863, 1311913047, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1426280387, 1777176494, 2124724351, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 700022464, 933988885, 1091156861};
        assertEquals(29, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr58));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(304069057);
        Integer[] comparisonArr59 = {972268331, 144949942, 1503160161, 80829850, 647935863, 1311913047, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1426280387, 1777176494, 2124724351, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 304069057, 700022464, 933988885, 1091156861};
        assertEquals(30, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr59));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2116074810);
        Integer[] comparisonArr60 = {972268331, 144949942, 1503160161, 80829850, 647935863, 1311913047, 1918432636, 42073079, 107424314, 260595978, 703695923, 1111065067, 1426280387, 1777176494, 2116074810, 14247246, 214661615, 423453666, 668814672, 707011229, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 2124724351, 304069057, 700022464, 933988885, 1091156861};
        assertEquals(31, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr60));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 42073079, avlTree.remove(42073079));
        Integer[] comparisonArr61 = {972268331, 647935863, 1503160161, 144949942, 703695923, 1311913047, 1918432636, 80829850, 260595978, 668814672, 707011229, 1111065067, 1426280387, 1777176494, 2116074810, 14247246, 107424314, 214661615, 423453666, 700022464, 933988885, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 2124724351, 304069057, 1091156861};
        assertEquals(30, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr61));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1751665286);
        Integer[] comparisonArr62 = {972268331, 647935863, 1503160161, 144949942, 703695923, 1311913047, 1918432636, 80829850, 260595978, 668814672, 707011229, 1111065067, 1426280387, 1777176494, 2116074810, 14247246, 107424314, 214661615, 423453666, 700022464, 933988885, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 2124724351, 304069057, 1091156861, 1751665286};
        assertEquals(31, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr62));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(779976);
        Integer[] comparisonArr63 = {972268331, 647935863, 1503160161, 144949942, 703695923, 1311913047, 1918432636, 80829850, 260595978, 668814672, 707011229, 1111065067, 1426280387, 1777176494, 2116074810, 14247246, 107424314, 214661615, 423453666, 700022464, 933988885, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 2124724351, 779976, 304069057, 1091156861, 1751665286};
        assertEquals(32, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr63));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 80829850, avlTree.remove(80829850));
        Integer[] comparisonArr64 = {972268331, 647935863, 1503160161, 144949942, 703695923, 1311913047, 1918432636, 14247246, 260595978, 668814672, 707011229, 1111065067, 1426280387, 1777176494, 2116074810, 779976, 107424314, 214661615, 423453666, 700022464, 933988885, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 2124724351, 304069057, 1091156861, 1751665286};
        assertEquals(31, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr64));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(659556200);
        Integer[] comparisonArr65 = {972268331, 647935863, 1503160161, 144949942, 703695923, 1311913047, 1918432636, 14247246, 260595978, 668814672, 707011229, 1111065067, 1426280387, 1777176494, 2116074810, 779976, 107424314, 214661615, 423453666, 659556200, 700022464, 933988885, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 2124724351, 304069057, 1091156861, 1751665286};
        assertEquals(32, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr65));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(804097040);
        Integer[] comparisonArr66 = {972268331, 647935863, 1503160161, 144949942, 703695923, 1311913047, 1918432636, 14247246, 260595978, 668814672, 804097040, 1111065067, 1426280387, 1777176494, 2116074810, 779976, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1074084898, 1235089582, 1486811550, 1768465817, 1871037877, 2090733381, 2124724351, 304069057, 1091156861, 1751665286};
        assertEquals(33, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr66));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1623699685);
        Integer[] comparisonArr67 = {972268331, 647935863, 1503160161, 144949942, 703695923, 1311913047, 1918432636, 14247246, 260595978, 668814672, 804097040, 1111065067, 1426280387, 1777176494, 2116074810, 779976, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1074084898, 1235089582, 1486811550, 1751665286, 1871037877, 2090733381, 2124724351, 304069057, 1091156861, 1623699685, 1768465817};
        assertEquals(34, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr67));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 14247246, avlTree.remove(14247246));
        Integer[] comparisonArr68 = {972268331, 647935863, 1503160161, 144949942, 703695923, 1311913047, 1918432636, 779976, 260595978, 668814672, 804097040, 1111065067, 1426280387, 1777176494, 2116074810, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1074084898, 1235089582, 1486811550, 1751665286, 1871037877, 2090733381, 2124724351, 304069057, 1091156861, 1623699685, 1768465817};
        assertEquals(33, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr68));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1503160161, avlTree.remove(1503160161));
        Integer[] comparisonArr69 = {972268331, 647935863, 1486811550, 144949942, 703695923, 1111065067, 1918432636, 779976, 260595978, 668814672, 804097040, 1074084898, 1311913047, 1777176494, 2116074810, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1091156861, 1235089582, 1426280387, 1751665286, 1871037877, 2090733381, 2124724351, 304069057, 1623699685, 1768465817};
        assertEquals(32, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr69));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(717018779);
        Integer[] comparisonArr70 = {972268331, 647935863, 1486811550, 144949942, 703695923, 1111065067, 1918432636, 779976, 260595978, 668814672, 804097040, 1074084898, 1311913047, 1777176494, 2116074810, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1091156861, 1235089582, 1426280387, 1751665286, 1871037877, 2090733381, 2124724351, 304069057, 717018779, 1623699685, 1768465817};
        assertEquals(33, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr70));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 260595978, avlTree.remove(260595978));
        Integer[] comparisonArr71 = {972268331, 647935863, 1486811550, 144949942, 703695923, 1111065067, 1918432636, 779976, 304069057, 668814672, 804097040, 1074084898, 1311913047, 1777176494, 2116074810, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1091156861, 1235089582, 1426280387, 1751665286, 1871037877, 2090733381, 2124724351, 717018779, 1623699685, 1768465817};
        assertEquals(32, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr71));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1235089582, avlTree.remove(1235089582));
        Integer[] comparisonArr72 = {972268331, 647935863, 1486811550, 144949942, 703695923, 1111065067, 1918432636, 779976, 304069057, 668814672, 804097040, 1074084898, 1311913047, 1777176494, 2116074810, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1091156861, 1426280387, 1751665286, 1871037877, 2090733381, 2124724351, 717018779, 1623699685, 1768465817};
        assertEquals(31, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr72));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(203881066);
        Integer[] comparisonArr73 = {972268331, 647935863, 1486811550, 144949942, 703695923, 1111065067, 1918432636, 779976, 304069057, 668814672, 804097040, 1074084898, 1311913047, 1777176494, 2116074810, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1091156861, 1426280387, 1751665286, 1871037877, 2090733381, 2124724351, 203881066, 717018779, 1623699685, 1768465817};
        assertEquals(32, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr73));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(354142479);
        Integer[] comparisonArr74 = {972268331, 647935863, 1486811550, 144949942, 703695923, 1111065067, 1918432636, 779976, 304069057, 668814672, 804097040, 1074084898, 1311913047, 1777176494, 2116074810, 107424314, 214661615, 423453666, 659556200, 700022464, 707011229, 933988885, 1091156861, 1426280387, 1751665286, 1871037877, 2090733381, 2124724351, 203881066, 354142479, 717018779, 1623699685, 1768465817};
        assertEquals(33, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr74));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 703695923, avlTree.remove(703695923));
        Integer[] comparisonArr75 = {972268331, 647935863, 1486811550, 144949942, 700022464, 1111065067, 1918432636, 779976, 304069057, 668814672, 804097040, 1074084898, 1311913047, 1777176494, 2116074810, 107424314, 214661615, 423453666, 659556200, 707011229, 933988885, 1091156861, 1426280387, 1751665286, 1871037877, 2090733381, 2124724351, 203881066, 354142479, 717018779, 1623699685, 1768465817};
        assertEquals(32, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr75));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1918432636, avlTree.remove(1918432636));
        Integer[] comparisonArr76 = {972268331, 647935863, 1486811550, 144949942, 700022464, 1111065067, 1871037877, 779976, 304069057, 668814672, 804097040, 1074084898, 1311913047, 1751665286, 2116074810, 107424314, 214661615, 423453666, 659556200, 707011229, 933988885, 1091156861, 1426280387, 1623699685, 1777176494, 2090733381, 2124724351, 203881066, 354142479, 717018779, 1768465817};
        assertEquals(31, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr76));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 107424314, avlTree.remove(107424314));
        Integer[] comparisonArr77 = {972268331, 647935863, 1486811550, 304069057, 700022464, 1111065067, 1871037877, 144949942, 423453666, 668814672, 804097040, 1074084898, 1311913047, 1751665286, 2116074810, 779976, 214661615, 354142479, 659556200, 707011229, 933988885, 1091156861, 1426280387, 1623699685, 1777176494, 2090733381, 2124724351, 203881066, 717018779, 1768465817};
        assertEquals(30, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr77));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1777176494, avlTree.remove(1777176494));
        Integer[] comparisonArr78 = {972268331, 647935863, 1486811550, 304069057, 700022464, 1111065067, 1871037877, 144949942, 423453666, 668814672, 804097040, 1074084898, 1311913047, 1751665286, 2116074810, 779976, 214661615, 354142479, 659556200, 707011229, 933988885, 1091156861, 1426280387, 1623699685, 1768465817, 2090733381, 2124724351, 203881066, 717018779};
        assertEquals(29, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr78));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 304069057, avlTree.remove(304069057));
        Integer[] comparisonArr79 = {972268331, 647935863, 1486811550, 214661615, 700022464, 1111065067, 1871037877, 144949942, 423453666, 668814672, 804097040, 1074084898, 1311913047, 1751665286, 2116074810, 779976, 203881066, 354142479, 659556200, 707011229, 933988885, 1091156861, 1426280387, 1623699685, 1768465817, 2090733381, 2124724351, 717018779};
        assertEquals(28, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr79));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 423453666, avlTree.remove(423453666));
        Integer[] comparisonArr80 = {972268331, 647935863, 1486811550, 214661615, 700022464, 1111065067, 1871037877, 144949942, 354142479, 668814672, 804097040, 1074084898, 1311913047, 1751665286, 2116074810, 779976, 203881066, 659556200, 707011229, 933988885, 1091156861, 1426280387, 1623699685, 1768465817, 2090733381, 2124724351, 717018779};
        assertEquals(27, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr80));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2116074810, avlTree.remove(2116074810));
        Integer[] comparisonArr81 = {972268331, 647935863, 1486811550, 214661615, 700022464, 1111065067, 1871037877, 144949942, 354142479, 668814672, 804097040, 1074084898, 1311913047, 1751665286, 2090733381, 779976, 203881066, 659556200, 707011229, 933988885, 1091156861, 1426280387, 1623699685, 1768465817, 2124724351, 717018779};
        assertEquals(26, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr81));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 933988885, avlTree.remove(933988885));
        Integer[] comparisonArr82 = {972268331, 647935863, 1486811550, 214661615, 700022464, 1111065067, 1871037877, 144949942, 354142479, 668814672, 717018779, 1074084898, 1311913047, 1751665286, 2090733381, 779976, 203881066, 659556200, 707011229, 804097040, 1091156861, 1426280387, 1623699685, 1768465817, 2124724351};
        assertEquals(25, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr82));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1111065067, avlTree.remove(1111065067));
        Integer[] comparisonArr83 = {972268331, 647935863, 1486811550, 214661615, 700022464, 1091156861, 1871037877, 144949942, 354142479, 668814672, 717018779, 1074084898, 1311913047, 1751665286, 2090733381, 779976, 203881066, 659556200, 707011229, 804097040, 1426280387, 1623699685, 1768465817, 2124724351};
        assertEquals(24, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr83));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 214661615, avlTree.remove(214661615));
        Integer[] comparisonArr84 = {972268331, 647935863, 1486811550, 203881066, 700022464, 1091156861, 1871037877, 144949942, 354142479, 668814672, 717018779, 1074084898, 1311913047, 1751665286, 2090733381, 779976, 659556200, 707011229, 804097040, 1426280387, 1623699685, 1768465817, 2124724351};
        assertEquals(23, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr84));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1091156861, avlTree.remove(1091156861));
        Integer[] comparisonArr85 = {972268331, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1871037877, 144949942, 354142479, 668814672, 717018779, 1074084898, 1426280387, 1751665286, 2090733381, 779976, 659556200, 707011229, 804097040, 1623699685, 1768465817, 2124724351};
        assertEquals(22, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr85));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 144949942, avlTree.remove(144949942));
        Integer[] comparisonArr86 = {972268331, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1871037877, 779976, 354142479, 668814672, 717018779, 1074084898, 1426280387, 1751665286, 2090733381, 659556200, 707011229, 804097040, 1623699685, 1768465817, 2124724351};
        assertEquals(21, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr86));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1871037877, avlTree.remove(1871037877));
        Integer[] comparisonArr87 = {972268331, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1768465817, 779976, 354142479, 668814672, 717018779, 1074084898, 1426280387, 1751665286, 2090733381, 659556200, 707011229, 804097040, 1623699685, 2124724351};
        assertEquals(20, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr87));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 804097040, avlTree.remove(804097040));
        Integer[] comparisonArr88 = {972268331, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1768465817, 779976, 354142479, 668814672, 717018779, 1074084898, 1426280387, 1751665286, 2090733381, 659556200, 707011229, 1623699685, 2124724351};
        assertEquals(19, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr88));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 668814672, avlTree.remove(668814672));
        Integer[] comparisonArr89 = {972268331, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1768465817, 779976, 354142479, 659556200, 717018779, 1074084898, 1426280387, 1751665286, 2090733381, 707011229, 1623699685, 2124724351};
        assertEquals(18, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr89));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1751665286, avlTree.remove(1751665286));
        Integer[] comparisonArr90 = {972268331, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1768465817, 779976, 354142479, 659556200, 717018779, 1074084898, 1426280387, 1623699685, 2090733381, 707011229, 2124724351};
        assertEquals(17, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr90));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 972268331, avlTree.remove(972268331));
        Integer[] comparisonArr91 = {717018779, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1768465817, 779976, 354142479, 659556200, 707011229, 1074084898, 1426280387, 1623699685, 2090733381, 2124724351};
        assertEquals(16, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr91));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 717018779, avlTree.remove(717018779));
        Integer[] comparisonArr92 = {707011229, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1768465817, 779976, 354142479, 659556200, 1074084898, 1426280387, 1623699685, 2090733381, 2124724351};
        assertEquals(15, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr92));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 659556200, avlTree.remove(659556200));
        Integer[] comparisonArr93 = {707011229, 647935863, 1486811550, 203881066, 700022464, 1311913047, 1768465817, 779976, 354142479, 1074084898, 1426280387, 1623699685, 2090733381, 2124724351};
        assertEquals(14, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr93));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 647935863, avlTree.remove(647935863));
        Integer[] comparisonArr94 = {707011229, 354142479, 1486811550, 203881066, 700022464, 1311913047, 1768465817, 779976, 1074084898, 1426280387, 1623699685, 2090733381, 2124724351};
        assertEquals(13, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr94));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1486811550, avlTree.remove(1486811550));
        Integer[] comparisonArr95 = {707011229, 354142479, 1426280387, 203881066, 700022464, 1311913047, 1768465817, 779976, 1074084898, 1623699685, 2090733381, 2124724351};
        assertEquals(12, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr95));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 779976, avlTree.remove(779976));
        Integer[] comparisonArr96 = {1426280387, 707011229, 1768465817, 354142479, 1311913047, 1623699685, 2090733381, 203881066, 700022464, 1074084898, 2124724351};
        assertEquals(11, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr96));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1426280387, avlTree.remove(1426280387));
        Integer[] comparisonArr97 = {1311913047, 707011229, 1768465817, 354142479, 1074084898, 1623699685, 2090733381, 203881066, 700022464, 2124724351};
        assertEquals(10, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr97));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1768465817, avlTree.remove(1768465817));
        Integer[] comparisonArr98 = {1311913047, 707011229, 2090733381, 354142479, 1074084898, 1623699685, 2124724351, 203881066, 700022464};
        assertEquals(9, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr98));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 203881066, avlTree.remove(203881066));
        Integer[] comparisonArr99 = {1311913047, 707011229, 2090733381, 354142479, 1074084898, 1623699685, 2124724351, 700022464};
        assertEquals(8, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr99));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 700022464, avlTree.remove(700022464));
        Integer[] comparisonArr100 = {1311913047, 707011229, 2090733381, 354142479, 1074084898, 1623699685, 2124724351};
        assertEquals(7, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr100));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1074084898, avlTree.remove(1074084898));
        Integer[] comparisonArr101 = {1311913047, 707011229, 2090733381, 354142479, 1623699685, 2124724351};
        assertEquals(6, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr101));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1311913047, avlTree.remove(1311913047));
        Integer[] comparisonArr102 = {707011229, 354142479, 2090733381, 1623699685, 2124724351};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr102));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2090733381, avlTree.remove(2090733381));
        Integer[] comparisonArr103 = {707011229, 354142479, 1623699685, 2124724351};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr103));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 707011229, avlTree.remove(707011229));
        Integer[] comparisonArr104 = {1623699685, 354142479, 2124724351};
        assertEquals(3, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr104));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1623699685, avlTree.remove(1623699685));
        Integer[] comparisonArr105 = {354142479, 2124724351};
        assertEquals(2, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr105));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 354142479, avlTree.remove(354142479));
        Integer[] comparisonArr106 = {2124724351};
        assertEquals(1, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr106));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2124724351, avlTree.remove(2124724351));
        Integer[] comparisonArr107 = {};
        assertEquals(0, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr107));
        assertEquals(comparisonList, avlTree.levelorder());
    }
}